/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.main.design;
import com.main.utility.DbConnection;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class productsnew extends javax.swing.JPanel {

   
    public productsnew() {
        initComponents();
        

    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();
        searchByLab = new javax.swing.JLabel();
        refreshBttn = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        productNameLab = new javax.swing.JLabel();
        productNameTxt = new javax.swing.JTextField();
        costPriceLab = new javax.swing.JLabel();
        costPriceTxt = new javax.swing.JTextField();
        stateTxt = new javax.swing.JTextField();
        priceLab1 = new javax.swing.JLabel();
        addProduct = new javax.swing.JLabel();
        editBttn = new javax.swing.JLabel();
        deleteBttn = new javax.swing.JLabel();
        clearBttn = new javax.swing.JLabel();
        btnAddProduct = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        costPriceLab1 = new javax.swing.JLabel();
        costPriceLab2 = new javax.swing.JLabel();
        costPriceLab3 = new javax.swing.JLabel();
        costPriceLab4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(983, 400));

        jLabel1.setFont(new java.awt.Font("Comfortaa", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 204));
        jLabel1.setText("PRODUCTS");

        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product ID", "Product name", "Cost Price", "Unit"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        searchTxt.setToolTipText("Search using Product Name, Brand Name OR Product Code");
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTxtKeyTyped(evt);
            }
        });

        searchByLab.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        searchByLab.setText("Search");

        refreshBttn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        refreshBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reload.png"))); // NOI18N
        refreshBttn.setText("Refresh");
        refreshBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBttnActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(392, 200));

        productNameLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        productNameLab.setText("Product Name :");

        productNameTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        productNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNameTxtKeyPressed(evt);
            }
        });

        costPriceLab.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        costPriceLab.setText("Cost Price :");

        costPriceTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        costPriceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costPriceTxtActionPerformed(evt);
            }
        });
        costPriceTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                costPriceTxtKeyPressed(evt);
            }
        });

        stateTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        stateTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stateTxtKeyPressed(evt);
            }
        });

        priceLab1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceLab1.setText("Unit of Product :");

        addProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProductMouseClicked(evt);
            }
        });

        editBttn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBttnMouseClicked(evt);
            }
        });

        deleteBttn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBttnMouseClicked(evt);
            }
        });

        clearBttn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearBttnMouseClicked(evt);
            }
        });

        btnAddProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add item.png"))); // NOI18N
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit item.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deleteitem.jpeg"))); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        costPriceLab1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        costPriceLab1.setText("Add");

        costPriceLab2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        costPriceLab2.setText("Edit");

        costPriceLab3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        costPriceLab3.setText("Delete");

        costPriceLab4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        costPriceLab4.setText("Clear");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addProduct)
                        .addGap(18, 18, 18)
                        .addComponent(editBttn)
                        .addGap(21, 21, 21)
                        .addComponent(deleteBttn)
                        .addGap(18, 18, 18)
                        .addComponent(clearBttn))
                    .addComponent(productNameLab)
                    .addComponent(costPriceLab, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceLab1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(costPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(costPriceLab1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(costPriceLab2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(costPriceLab3)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(costPriceLab4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameLab)
                    .addComponent(productNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costPriceLab)
                    .addComponent(costPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLab1)
                    .addComponent(stateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addProduct)
                    .addComponent(deleteBttn)
                    .addComponent(clearBttn)
                    .addComponent(editBttn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costPriceLab3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costPriceLab2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costPriceLab4)
                    .addComponent(costPriceLab1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PRODUCTS", jPanel1);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printLarge.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchByLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(refreshBttn)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchByLab, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(refreshBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel Df = (DefaultTableModel) table.getModel();
        int selectedIndex = table.getSelectedRow();
        //comboBox .setSelectedItem(Df.getValueAt(selectedIndex, 1).toString());
        productNameTxt.setText(Df.getValueAt(selectedIndex, 1).toString());
        costPriceTxt.setText(Df.getValueAt(selectedIndex, 2).toString());
        stateTxt.setText(Df.getValueAt(selectedIndex, 3).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased

    }//GEN-LAST:event_searchTxtKeyReleased

    private void searchTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyTyped
        // TODO add your handling code here:
        String searchtext = searchTxt.getText().trim();
        table_update(searchtext);
    }//GEN-LAST:event_searchTxtKeyTyped

    private void refreshBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBttnActionPerformed

        // productCodeTxt.setText("");
        productNameTxt.setText("");
        costPriceTxt.setText("");
        stateTxt.setText("");
        loadDatas();
    }//GEN-LAST:event_refreshBttnActionPerformed

    private void productNameTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNameTxtKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)) {
            productNameTxt.setEditable(true);

        } else {
            JOptionPane.showMessageDialog(null, " Please Enter valid product name.......");

        }
    }//GEN-LAST:event_productNameTxtKeyPressed

    private void costPriceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costPriceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costPriceTxtActionPerformed

    private void costPriceTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costPriceTxtKeyPressed
        // TODO add your handling code here:
        String telephone = costPriceTxt.getText();
        int length = telephone.length();
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            JOptionPane.showMessageDialog(null, "Please enter numbers only");
        } else {
            if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
                if (length < 10) {
                    costPriceTxt.setEditable(true);
                } else {
                    costPriceTxt.setEditable(false);
                }
            }
        }
    }//GEN-LAST:event_costPriceTxtKeyPressed

    private void stateTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stateTxtKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)) {
            stateTxt.setEditable(true);

        } else {
            JOptionPane.showMessageDialog(null, " Please Enter valid product name.......");

        }
    }//GEN-LAST:event_stateTxtKeyPressed

    private void addProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProductMouseClicked

    }//GEN-LAST:event_addProductMouseClicked

    private void editBttnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBttnMouseClicked

    }//GEN-LAST:event_editBttnMouseClicked

    private void deleteBttnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBttnMouseClicked

    }//GEN-LAST:event_deleteBttnMouseClicked

    private void clearBttnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearBttnMouseClicked

        productNameTxt.setText("");
        costPriceTxt.setText("");
        stateTxt.setText("");
    }//GEN-LAST:event_clearBttnMouseClicked

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        // TODO add your handling code here:
        // Connection con1;
        try {
            PreparedStatement insert;
            String name = productNameTxt.getText();
            Double cost = Double.parseDouble(costPriceTxt.getText());
            String state = stateTxt.getText();
            if (productNameTxt.getText().equals("") || costPriceTxt.getText().equals("") || stateTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields!");
            } else {
                try {
                    com.mysql.jdbc.Connection con1 = (com.mysql.jdbc.Connection) new DbConnection().getConnection();

                    insert = con1.prepareStatement("INSERT INTO products(productname,costprice,state) VALUES(?,?,?)");
                    insert.setString(1, name);
                    insert.setDouble(2, cost);
                    insert.setString(3, state);
                    insert.executeUpdate();

                    //                    insert = con1.prepareStatement("INSERT INTO currentstocks(pid,quantity) VALUES(?,?)");
                    //                    insert.setString(1, name);
                    //                    insert.setDouble(2, cost);
                    //                    insert.setString(3, "");
                    //                    insert.executeUpdate();
                    String Message = "Record Added..... \n Product name : "+name;
                    JOptionPane.showMessageDialog(this, Message);
                    loadDatas();
                } catch (SQLException | NullPointerException ex) {
                    Logger.getLogger(products.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (NullPointerException ex) {
            Logger.getLogger(products.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) table.getModel();
        int selectedIndex = table.getSelectedRow();
        Connection con1;
        PreparedStatement insert;
        String name = productNameTxt.getText();
        String price = costPriceTxt.getText();
        String state = stateTxt.getText();
        int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
        con1 = (com.mysql.jdbc.Connection) new DbConnection().getConnection();
        if (table.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Select a table data first!");
        } else {
            if (productNameTxt.getText().equals("") || costPriceTxt.getText().equals("") || stateTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill all the fields!");
            } else {
                try {
                    insert = con1.prepareStatement("UPDATE products SET productname=?,costprice=?,state=? WHERE pid=?");
                    insert.setString(1, name);
                    insert.setString(2, price);
                    insert.setString(3, state);
                    insert.setInt(4, id);
                    insert.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Updated Successfully");
                } catch (HeadlessException | SQLException e) {
                }
            }
            loadDatas();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (table.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Select a table data first!");
        } else {
            DefaultTableModel Df = (DefaultTableModel) table.getModel();
            int selectedIndex = table.getSelectedRow();
            java.sql.Connection con1;
            PreparedStatement insert;
            try {

                int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

                int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to Delete the Record", "warning", JOptionPane.YES_NO_OPTION);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    con1 = (com.mysql.jdbc.Connection) new DbConnection().getConnection();
                    insert = con1.prepareStatement("delete from products where pid=?");
                    insert.setInt(1, id);
                    insert.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Record Update");
                    loadDatas();
                    productNameTxt.setText("");
                    costPriceTxt.setText("");
                    stateTxt.setText("");
                    productNameTxt.requestFocus();
                }
            } catch (SQLException ex) {

                Logger.getLogger(worker.class.getName()).log(Level.SEVERE, null, ex);

            }
            deleteStock();

        }
    }//GEN-LAST:event_btnDeleteActionPerformed
public void deleteStock() {
        try {
            Statement stmt = null;
            String q = "DELETE FROM currentstocks WHERE pid ";

            //stmt.executeUpdate(q);
            stmt.executeUpdate(q);
        } catch (SQLException e) {
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        productNameTxt.setText("");
        costPriceTxt.setText("");
        stateTxt.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed
 public void loadDatas() {
        int c;
//Connection con;
        try {

            com.mysql.jdbc.Connection con1 = (com.mysql.jdbc.Connection) new DbConnection().getConnection();
            PreparedStatement insert = con1.prepareStatement("select * from products");
            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel Df;
            Df = (DefaultTableModel) table.getModel();
            Df.setRowCount(0);

            while (rs.next()) {

                Vector v2 = new Vector();

                for (int a = 1; a <= c; a++) {

                    v2.add(rs.getString("pid"));
                    v2.add(rs.getString("productname"));
                    v2.add(rs.getString("costprice"));
                    v2.add(rs.getString("state"));

                }
                Df.addRow(v2);
            }
        } catch (SQLException ex) {

            Logger.getLogger(worker.class.getName()).log(Level.SEVERE, null, ex);

        }

    }//end of method DefaultTableModel

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       MessageFormat header = new MessageFormat("Product Report of Annapurna mess" );
        MessageFormat footer = new MessageFormat(" Mess Secretory                                      Mess Manager");
        try 
        {
           table.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Cannot print %s%n", e.getMessage());
        }

    }//GEN-LAST:event_jButton6ActionPerformed

 private void table_update(String txt) {
        int c;

        try {
            com.mysql.jdbc.Connection con1 = (com.mysql.jdbc.Connection) new DbConnection().getConnection();
            PreparedStatement insert = con1.prepareStatement("SELECT * FROM "
                    + "`products` WHERE pid like '%" + txt + "%' or "
                    + "productname like '%" + txt + "%' or state like "
                    + "'%" + txt + "%'");
            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();

            DefaultTableModel Df;
            Df = (DefaultTableModel) table.getModel();
            Df.setRowCount(0);

            while (rs.next()) {

                Vector v2 = new Vector();

                for (int a = 1; a <= c; a++) {

                     v2.add(rs.getString("pid"));
                    v2.add(rs.getString("productname"));
                    v2.add(rs.getString("costprice"));
                    v2.add(rs.getString("state"));
                }
                Df.addRow(v2);
            }
        } catch (SQLException ex) {

            Logger.getLogger(worker.class.getName()).log(Level.SEVERE, null, ex);

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addProduct;
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel clearBttn;
    private javax.swing.JLabel costPriceLab;
    private javax.swing.JLabel costPriceLab1;
    private javax.swing.JLabel costPriceLab2;
    private javax.swing.JLabel costPriceLab3;
    private javax.swing.JLabel costPriceLab4;
    private javax.swing.JTextField costPriceTxt;
    private javax.swing.JLabel deleteBttn;
    private javax.swing.JLabel editBttn;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel priceLab1;
    private javax.swing.JLabel productNameLab;
    private javax.swing.JTextField productNameTxt;
    private javax.swing.JButton refreshBttn;
    private javax.swing.JLabel searchByLab;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField stateTxt;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
